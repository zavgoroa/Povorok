>=
	mov $1, $2
	.
>1st
	mov $3, $1
	.
>INDEX
	.
>ADD
	mov ax, $1
	add ax, $2
	mov $3, ax
	.
>SUB
	mov ax, $1
	sub ax, $2
	mov $3, ax
	.
>MUL
	mov ax, $1
	sub $2
    ;при умножении байтов результат помещается в ax;
    ;при умножении слов результат помещается в пару dx:ax;
    ;при умножении двойных слов результат помещается в пару edx:eax
	mov $3, ax
	.
>DIV
	mov ax, $1
	div $2
	mov $3, ax
	.
>STDIN
	.
>STDOUT
	.
>bf
	cmp $2 1
	je $1
	.
>defl
	$1:
	.
>eq/2
	mov ax $1
	mov bx $2
	cmp ax, bx
	je l1
	mov %3 0
	jmp l2:
	l1:
	mov %3 1
	l2:
	.
>neq
	mov ax $1
	mov bx $2
	cmp ax, bx
	jne l1
	mov %3 0
	jmp l2:
	l1:
	mov %3 1
	l2:
	.
>gr
	mov ax $1
    mov bx $2
    cmp ax, bx
    jg l1
    mov %3 0
    jmp l2:
    l1:
    mov %3 1
    l2:
	.
>les
	mov ax $1
	mov bx $2
	cmp ax, bx
	jle l1
	mov %3 0
	jmp l2:
	l1:
	mov %3 1
	l2:
	.
>bzl
	mov ax $2
	cmp ax, 0
	jne l2
	jmp $1
	l2:
	.
>jmp
	jmp $1
	.