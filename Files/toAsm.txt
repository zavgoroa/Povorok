>=
	mov ax, $2
	mov $1, ax
	.
>1st
	mov ax, $1
	mov $3, ax
	.
>INDEX
	.
>ADD
	mov ax, $1
	add ax, $2
	mov $3, ax
	.
>SUB
	mov ax, $1
	sub ax, $2
	mov $3, ax
	.
>MUL
	mov ax, $1
	mul $2
    mov $3, ax
	.
>DIV
	mov ax, $1
	div $2
	mov $3, ax
	.
>STDIN
	.
>STDOUT
	mov ax, $1   
	call far ptr int_to_s
	mov dx, offset buf
	call out_str
	.
>bf
	cmp $2 1
	je $1
	.
>defl
	$1:
	.
>eq
	mov ax, $1
	mov bx, $2
	cmp ax, bx
	je #1
	mov $3, 0
	jmp #2:
	#1:
	mov $3 1
	#2:
	.
>neq
	mov ax, $1
	mov bx, $2
	cmp ax, bx
	jne #1
	mov $3, 0
	jmp #2:
	#1:
	mov $3 1
	#2:
	.
>gr
	mov ax, $1
    mov bx, $2
    cmp ax, bx
    jg #1
    mov $3, 0
    jmp #2:
    #1:
    mov $3 1
    #2:
	.
>les
	mov ax, $1
	mov bx, $2
	cmp ax, bx
	jle #1
	mov $3, 0
	jmp #2:
	#1:
	mov $3 1
	#2:
	.
>bzl
	mov ax, $2
	cmp ax, 0
	jne #2
	jmp $1
	#2:
	.
>jmp
	jmp $1
	.